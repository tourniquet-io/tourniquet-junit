<!--
  ~ Copyright 2015-2016 DevCon5 GmbH, info@devcon5.ch
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>io.tourniquet.junit</groupId>
		<artifactId>parent</artifactId>
		<version>0.4.7</version>
		<relativePath>./tourniquet-parent</relativePath>
	</parent>

	<artifactId>tourniquet-junit</artifactId>
	<version>0.4.7</version>
	<packaging>pom</packaging>

	<name>${project.groupId}:${project.artifactId}</name>
	<description>The tourniquet root module</description>

	<modules>
		<module>tourniquet-parent</module>
		<module>tourniquet-core</module>
		<module>tourniquet-file</module>
		<module>tourniquet-net</module>
		<module>tourniquet-security</module>
		<module>tourniquet-measure</module>
		<module>tourniquet-tx</module>
	</modules>

	<!--
		//TQT-21
		Tourniquet is organized in sub-modules to speed up the built during development. All modules that have
		dependencies to external libraries that are not common (i.e. like apache commons), are organized as separate
		module that can be included in the build by activating the corresponding profile. In order to build all
		modules, the mod-all profile should be activated.
	-->
	<profiles>
		<profile>
			<id>mod-ldap</id>
			<modules>
				<module>tourniquet-ldap</module>
			</modules>
		</profile>
		<profile>
			<id>mod-http</id>
			<modules>
				<module>tourniquet-http</module>
			</modules>
		</profile>
		<profile>
			<id>mod-cdi</id>
			<modules>
				<module>tourniquet-inject</module>
			</modules>
		</profile>
		<profile>
			<id>mod-jcr</id>
			<modules>
				<module>tourniquet-jcr</module>
			</modules>
		</profile>
		<profile>
			<id>mod-selenium</id>
			<modules>
				<module>tourniquet-pageobjects</module>
				<module>tourniquet-selenium</module>
			</modules>
		</profile>
		<profile>
			<id>mod-pdf</id>
			<modules>
				<module>tourniquet-pdf</module>
			</modules>
		</profile>
		<profile>
			<id>mod-all</id>
			<modules>
				<module>tourniquet-http</module>
				<module>tourniquet-inject</module>
				<module>tourniquet-jcr</module>
				<module>tourniquet-ldap</module>
				<module>tourniquet-pageobjects</module>
				<module>tourniquet-selenium</module>
				<module>tourniquet-pdf</module>
				<module>tourniquet-all</module>
			</modules>
		</profile>
	</profiles>

	<dependencies>
		<!-- JUnit is required by all modules and won't be added as dependency as tourniquet consumers
             must add JUnit themselves -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<!-- SLF4J & Log4J2 Bindings are added so that tests can produce log-output -->
		<!-- Binding for Log4J -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- Log4j API and Core implementation required for binding -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>
